/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Duel, DuelInterface } from "../../contracts/Duel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "EndDuel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "player",
        type: "address",
      },
    ],
    name: "EnterDuel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address payable",
        name: "withdrawer",
        type: "address",
      },
    ],
    name: "ForceEndDuel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "StartDuel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "TransferOwnership",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_roomId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "checkPlayerWon",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "duelRooms",
    outputs: [
      {
        internalType: "address payable",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_betAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_hasWon",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_roomId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_randomness",
        type: "uint256",
      },
    ],
    name: "endDuel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_roomId",
        type: "bytes32",
      },
    ],
    name: "enterDuel",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_roomId",
        type: "bytes32",
      },
    ],
    name: "forceEndDuel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_roomId",
        type: "bytes32",
      },
    ],
    name: "getRoomCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_roomId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoomPlayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "contract GovernanceInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "toAddress",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ddf38038062001ddf833981810160405281019062000037919062000129565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b611c74806200016b6000396000f3fe60806040526004361061009c5760003560e01c80635aa6e675116100645780635aa6e6751461018d57806367cada8d146101b85780639138b499146101e1578063914afac91461021e578063d4bd3d0c14610247578063f2fde38b146102845761009c565b806301b976b8146100a157806312065fe0146100e057806328bec5991461010b5780633290dba41461012757806351cff8d914610164575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c3919061127a565b6102ad565b6040516100d793929190611325565b60405180910390f35b3480156100ec57600080fd5b506100f5610321565b604051610102919061135c565b60405180910390f35b61012560048036038101906101209190611377565b610329565b005b34801561013357600080fd5b5061014e60048036038101906101499190611377565b610571565b60405161015b919061135c565b60405180910390f35b34801561017057600080fd5b5061018b600480360381019061018691906113d0565b610591565b005b34801561019957600080fd5b506101a26106d1565b6040516101af919061145c565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da919061127a565b6106f5565b005b3480156101ed57600080fd5b506102086004803603810190610203919061127a565b610b52565b6040516102159190611498565b60405180910390f35b34801561022a57600080fd5b5061024560048036038101906102409190611377565b610cb8565b005b34801561025357600080fd5b5061026e6004803603810190610269919061127a565b610dcd565b60405161027b91906114b3565b60405180910390f35b34801561029057600080fd5b506102ab60048036038101906102a691906114fa565b610eb8565b005b600360205281600052604060002081815481106102c957600080fd5b9060005260206000209060030201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16905083565b600047905090565b600260036000838152602001908152602001600020805490501115610383576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037a90611584565b60405180910390fd5b60016003600083815260200190815260200160002080549050146103a85760016103e3565b34600360008381526020019081526020016000206000815481106103cf576103ce6115a4565b5b906000526020600020906003020160010154145b610422576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104199061161f565b60405180910390fd5b600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020013481526020016000151581525090506003600083815260200190815260200160002081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555050507fe2a5a2adc7a02190e781cc57a01f59eee7a16aeca817330ee0f93d65ea467fa2816000015160405161053d919061163f565b60405180910390a1600260036000848152602001908152602001600020805490500361056d5761056c82610fc3565b5b5050565b600060036000838152602001908152602001600020805490509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610621576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610618906116a6565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1647604051610647906116f7565b60006040518083038185875af1925050503d8060008114610684576040519150601f19603f3d011682016040523d82523d6000602084013e610689565b606091505b50509050806106cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c490611758565b60405180910390fd5b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c906117c4565b60405180910390fd5b60026003600084815260200190815260200160002080549050146107de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d590611830565b60405180910390fd5b600060036000848152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156108c057838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020019060010190610813565b5050505090506109066040518060400160405280602081526020017f5b454e445f4455454c5d206475656c506c617965727320636f756e743a2025738152508251611144565b600060028260008151811061091e5761091d6115a4565b5b602002602001015160200151610934919061187f565b90506109886040518060400160405280601981526020017f5b454e445f4455454c5d2062657420616d6f756e743a20257300000000000000815250670de0b6b3a7640000836109839190611908565b611144565b60006002846109979190611939565b90506109d86040518060400160405280601e81526020017f5b454e445f4455454c5d20696e646578206f662077696e6e65723a202573000081525082611144565b60016003600087815260200190815260200160002082815481106109ff576109fe6115a4565b5b906000526020600020906003020160020160006101000a81548160ff0219169083151502179055506000838281518110610a3c57610a3b6115a4565b5b60200260200101516000015190508073ffffffffffffffffffffffffffffffffffffffff166108fc600a600986610a73919061187f565b610a7d9190611908565b9081150290604051600060405180830381858888f19350505050158015610aa8573d6000803e3d6000fd5b50610b136040518060400160405280601981526020017f5b454e445f4455454c5d2077696e20616d6f756e743a20257300000000000000815250670de0b6b3a7640000600a600987610afa919061187f565b610b049190611908565b610b0e9190611908565b611144565b7f571c0ec495ac67934308ac67f84caa0685280b3b9231357a98aecbe25f30f3c385604051610b42919061135c565b60405180910390a1505050505050565b60006001821115610b98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8f906119b6565b60405180910390fd5b600060036000858152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610c7a57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900460ff16151515158152505081526020019060010190610bcd565b50505050905082815111610c8f576000610caf565b808381518110610ca257610ca16115a4565b5b6020026020010151600001515b91505092915050565b600060036000838152602001908152602001600020600081548110610ce057610cdf6115a4565b5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc60036000858152602001908152602001600020600081548110610d5457610d536115a4565b5b9060005260206000209060030201600101549081150290604051600060405180830381858888f19350505050158015610d91573d6000803e3d6000fd5b507fa99f510f0225a2a23502268401e125ea9a786551682d8ccb4a4fd3ee76ab11da81604051610dc1919061163f565b60405180910390a15050565b60006002600360008581526020019081526020016000208054905014610e28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1f90611a22565b60405180910390fd5b6001821115610e6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6390611a8e565b60405180910390fd5b600360008481526020019081526020016000208281548110610e9157610e906115a4565b5b906000526020600020906003020160020160009054906101000a900460ff16905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3f906116a6565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcfaaa26691e16e66e73290fc725eee1a6b4e0e693a1640484937aac25ffb55a481604051610fb89190611498565b60405180910390a150565b600260036000838152602001908152602001600020805490501461101c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101390611afa565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663360131896040518163ffffffff1660e01b8152600401602060405180830381865afa158015611087573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ab9190611b2f565b73ffffffffffffffffffffffffffffffffffffffff1663b737ed1b826040518263ffffffff1660e01b81526004016110e39190611b6b565b600060405180830381600087803b1580156110fd57600080fd5b505af1158015611111573d6000803e3d6000fd5b505050507facea17fc10577f777ca867b5daee3da8c72f9ed06b0d08f33ae25177bced123360405160405180910390a150565b6111dc828260405160240161115a929190611c0e565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506111e0565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b6000819050919050565b6112218161120e565b811461122c57600080fd5b50565b60008135905061123e81611218565b92915050565b6000819050919050565b61125781611244565b811461126257600080fd5b50565b6000813590506112748161124e565b92915050565b6000806040838503121561129157611290611209565b5b600061129f8582860161122f565b92505060206112b085828601611265565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112e5826112ba565b9050919050565b6112f5816112da565b82525050565b61130481611244565b82525050565b60008115159050919050565b61131f8161130a565b82525050565b600060608201905061133a60008301866112ec565b61134760208301856112fb565b6113546040830184611316565b949350505050565b600060208201905061137160008301846112fb565b92915050565b60006020828403121561138d5761138c611209565b5b600061139b8482850161122f565b91505092915050565b6113ad816112da565b81146113b857600080fd5b50565b6000813590506113ca816113a4565b92915050565b6000602082840312156113e6576113e5611209565b5b60006113f4848285016113bb565b91505092915050565b6000819050919050565b600061142261141d611418846112ba565b6113fd565b6112ba565b9050919050565b600061143482611407565b9050919050565b600061144682611429565b9050919050565b6114568161143b565b82525050565b6000602082019050611471600083018461144d565b92915050565b6000611482826112ba565b9050919050565b61149281611477565b82525050565b60006020820190506114ad6000830184611489565b92915050565b60006020820190506114c86000830184611316565b92915050565b6114d781611477565b81146114e257600080fd5b50565b6000813590506114f4816114ce565b92915050565b6000602082840312156115105761150f611209565b5b600061151e848285016114e5565b91505092915050565b600082825260208201905092915050565b7f526f6f6d2069732066756c6c2e00000000000000000000000000000000000000600082015250565b600061156e600d83611527565b915061157982611538565b602082019050919050565b6000602082019050818103600083015261159d81611561565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f706c61796572732073686f756c64206265742073616d6520616d6f756e740000600082015250565b6000611609601e83611527565b9150611614826115d3565b602082019050919050565b60006020820190508181036000830152611638816115fc565b9050919050565b600060208201905061165460008301846112ec565b92915050565b7f6f6e6c79206f776e65722063616e2063616c6c20697400000000000000000000600082015250565b6000611690601683611527565b915061169b8261165a565b602082019050919050565b600060208201905081810360008301526116bf81611683565b9050919050565b600081905092915050565b50565b60006116e16000836116c6565b91506116ec826116d1565b600082019050919050565b6000611702826116d4565b9150819050919050565b7f6661696c656420746f2073656e642072656d61696e696e672062616c616e6365600082015250565b6000611742602083611527565b915061174d8261170c565b602082019050919050565b6000602082019050818103600083015261177181611735565b9050919050565b7f6f6e6c7920636f6e74726163744f776e65722063616e2063616c6c2069740000600082015250565b60006117ae601e83611527565b91506117b982611778565b602082019050919050565b600060208201905081810360008301526117dd816117a1565b9050919050565b7f526f6f6d206973206e6f742066756c6c2e000000000000000000000000000000600082015250565b600061181a601183611527565b9150611825826117e4565b602082019050919050565b600060208201905081810360008301526118498161180d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061188a82611244565b915061189583611244565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118ce576118cd611850565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061191382611244565b915061191e83611244565b92508261192e5761192d6118d9565b5b828204905092915050565b600061194482611244565b915061194f83611244565b92508261195f5761195e6118d9565b5b828206905092915050565b7f696e6465782063616e277420626520626967676572207468616e203100000000600082015250565b60006119a0601c83611527565b91506119ab8261196a565b602082019050919050565b600060208201905081810360008301526119cf81611993565b9050919050565b7f726f6f6d2073686f756c642062652066756c6c21000000000000000000000000600082015250565b6000611a0c601483611527565b9150611a17826119d6565b602082019050919050565b60006020820190508181036000830152611a3b816119ff565b9050919050565b7f696e6465782063616e277420626520626967676572207468616e20312e000000600082015250565b6000611a78601d83611527565b9150611a8382611a42565b602082019050919050565b60006020820190508181036000830152611aa781611a6b565b9050919050565b7f526f6f6d2073686f756c642062652066756c6c2e000000000000000000000000600082015250565b6000611ae4601483611527565b9150611aef82611aae565b602082019050919050565b60006020820190508181036000830152611b1381611ad7565b9050919050565b600081519050611b29816114ce565b92915050565b600060208284031215611b4557611b44611209565b5b6000611b5384828501611b1a565b91505092915050565b611b658161120e565b82525050565b6000602082019050611b806000830184611b5c565b92915050565b600081519050919050565b60005b83811015611baf578082015181840152602081019050611b94565b83811115611bbe576000848401525b50505050565b6000601f19601f8301169050919050565b6000611be082611b86565b611bea8185611527565b9350611bfa818560208601611b91565b611c0381611bc4565b840191505092915050565b60006040820190508181036000830152611c288185611bd5565b9050611c3760208301846112fb565b939250505056fea264697066735822122067e099385d41903d907d34ffab625cb84c40c8c4d5df291a16a169fcdc6426b164736f6c634300080f0033";

type DuelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DuelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Duel__factory extends ContractFactory {
  constructor(...args: DuelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _governance: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Duel> {
    return super.deploy(_governance, overrides || {}) as Promise<Duel>;
  }
  override getDeployTransaction(
    _governance: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_governance, overrides || {});
  }
  override attach(address: string): Duel {
    return super.attach(address) as Duel;
  }
  override connect(signer: Signer): Duel__factory {
    return super.connect(signer) as Duel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DuelInterface {
    return new utils.Interface(_abi) as DuelInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Duel {
    return new Contract(address, _abi, signerOrProvider) as Duel;
  }
}
