/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  Governance,
  GovernanceInterface,
} from "../../contracts/Governance";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "duel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_randomness",
        type: "address",
      },
      {
        internalType: "address",
        name: "_duel",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "randomness",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600281905550610562806100286000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063360131891461004657806372fd0a5814610064578063f09a401614610082575b600080fd5b61004e61009e565b60405161005b91906102e9565b60405180910390f35b61006c6100c2565b60405161007991906102e9565b60405180910390f35b61009c60048036038101906100979190610335565b6100e8565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014e906103d2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bd9061043e565b60405180910390fd5b60006002540361020b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610202906104aa565b60405180910390fd5b6002600081548092919061021e90610503565b9190505550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102d3826102a8565b9050919050565b6102e3816102c8565b82525050565b60006020820190506102fe60008301846102da565b92915050565b600080fd5b610312816102c8565b811461031d57600080fd5b50565b60008135905061032f81610309565b92915050565b6000806040838503121561034c5761034b610304565b5b600061035a85828601610320565b925050602061036b85828601610320565b9150509250929050565b600082825260208201905092915050565b7f72616e646f6d6e6573732061646472657373206973206e756c6c000000000000600082015250565b60006103bc601a83610375565b91506103c782610386565b602082019050919050565b600060208201905081810360008301526103eb816103af565b9050919050565b7f6475656c2061646472657373206973206e756c6c000000000000000000000000600082015250565b6000610428601483610375565b9150610433826103f2565b602082019050919050565b600060208201905081810360008301526104578161041b565b9050919050565b7f63616e6e6f742063616c6c20696e697420616761696e21000000000000000000600082015250565b6000610494601783610375565b915061049f8261045e565b602082019050919050565b600060208201905081810360008301526104c381610487565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061050e826104f9565b915060008203610521576105206104ca565b5b60018203905091905056fea26469706673582212202ab81b6dc18ae3d785c8d9c4dff5679d054fa0e02b4d660d2b9d19616d5d063164736f6c634300080f0033";

type GovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Governance__factory extends ContractFactory {
  constructor(...args: GovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Governance> {
    return super.deploy(overrides || {}) as Promise<Governance>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Governance {
    return super.attach(address) as Governance;
  }
  override connect(signer: Signer): Governance__factory {
    return super.connect(signer) as Governance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceInterface {
    return new utils.Interface(_abi) as GovernanceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Governance {
    return new Contract(address, _abi, signerOrProvider) as Governance;
  }
}
